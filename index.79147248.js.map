{"mappings":"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","sources":["node_modules/@swc/helpers/src/_define_property.mjs","node_modules/@swc/helpers/src/_object_spread.mjs","node_modules/@swc/helpers/src/_object_spread_props.mjs","src/js/Fetcher.js","src/js/main.js","src/js/JsonPlaceholderAPI.js"],"sourcesContent":["export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n","import defineProperty from './_define_property.mjs';\n\nexport default function _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}","function ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n    keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\n\nexport default function _objectSpreadProps(target, source) {\n  source = source != null ? source : {}\n  if (Object.getOwnPropertyDescriptors) {\n    Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n  } else {\n    ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(\n        target,\n        key,\n        Object.getOwnPropertyDescriptor(source, key)\n      );\n    });\n  }\n\n  return target;\n}","class Fetcher {\r\n    constructor(baseUrl) {\r\n        this.baseUrl = baseUrl;\r\n    }\r\n\r\n    async doFetch(resource, options = {}) {\r\n        const {timeout = 8000} = options;\r\n\r\n        const constroller = new AbortController();\r\n        const timeoutId = setTimeout(() => constroller.abort(), timeout);\r\n\r\n        const response = await fetch(this.baseUrl + resource, {\r\n            ...options,\r\n            signal: constroller.signal\r\n        });\r\n\r\n        clearTimeout(timeoutId);\r\n\r\n        return response;\r\n    }\r\n\r\n    async get(endpoint, filterJsonKeys = []) {\r\n        const response = await this.doFetch(endpoint);\r\n\r\n        if(!response.ok) {\r\n            throw new Error(`Fetch error ${response.status}`);\r\n        }\r\n\r\n        let jsonResult = await response.json();\r\n\r\n        // Filter out sub part of json response if not the entire object is wanted.\r\n        // If no keys are given, the response is returned as the endpoint has responded.\r\n        filterJsonKeys.forEach(key => jsonResult = jsonResult[key]);\r\n\r\n        return jsonResult;\r\n    }\r\n}\r\n\r\nexport default Fetcher;","import JsonPlaceholderAPI from './JsonPlaceholderAPI';\r\n\r\nconst jsonPlaceholderAPI = new JsonPlaceholderAPI();\r\n\r\n[\r\n    {name: 'posts',                   method: jsonPlaceholderAPI.getPosts.bind(jsonPlaceholderAPI)},\r\n    {name: 'post-by-id',              method: jsonPlaceholderAPI.getPostById.bind(jsonPlaceholderAPI, 3)},\r\n    {name: 'comments',                method: jsonPlaceholderAPI.getComments.bind(jsonPlaceholderAPI)},\r\n    {name: 'comments-for-post-by-id', method: jsonPlaceholderAPI.getCommentsForPostWithId.bind(jsonPlaceholderAPI, 3)},\r\n    {name: 'albums',                  method: jsonPlaceholderAPI.getAlbums.bind(jsonPlaceholderAPI)},\r\n    {name: 'photos',                  method: jsonPlaceholderAPI.getPhotos.bind(jsonPlaceholderAPI)},\r\n    {name: 'todos',                   method: jsonPlaceholderAPI.getTodos.bind(jsonPlaceholderAPI)},\r\n    {name: 'users',                   method: jsonPlaceholderAPI.getUsers.bind(jsonPlaceholderAPI)},\r\n    {name: 'posts-with-users',        method: jsonPlaceholderAPI.getPostsWithUsers.bind(jsonPlaceholderAPI)},\r\n].forEach(item => {\r\n    const button = document.querySelector(`#fetch-${item.name}`);\r\n    const output = document.querySelector(`#fetch-${item.name}-output`);\r\n\r\n    button.addEventListener('click', (event) => {\r\n        output.innerText = 'Fetching data...';\r\n\r\n        item.method().then(result => {\r\n            const jsonStr = JSON.stringify(result, null, 4);\r\n            output.innerHTML = jsonStr;\r\n        }).catch(error => {\r\n            output.innerHTML = error;\r\n        });\r\n    });\r\n});\r\n\r\ndocument.querySelectorAll('.btn-collapse').forEach(button => {\r\n    button.addEventListener('click', function(event) {\r\n        const codeElement = this.nextElementSibling.firstElementChild;\r\n        if(codeElement.style.display === 'none') {\r\n            codeElement.style.display = 'block';\r\n        }else {\r\n            codeElement.style.display = 'none';\r\n        }\r\n    });\r\n});","import Fetcher from './Fetcher';\r\n\r\nclass JsonPlaceholderAPI extends Fetcher {\r\n    constructor() {\r\n        super('https://jsonplaceholder.typicode.com');\r\n    }\r\n\r\n    async getPosts() {\r\n        return await this.get('/posts');\r\n    }\r\n\r\n    async getPostById(id) {\r\n        return await this.get(`/posts/${id}`);\r\n    }\r\n\r\n    async getCommentsForPostWithId(id) {\r\n        return await this.get(`/posts/${id}/comments`);\r\n    }\r\n\r\n    async getComments() {\r\n        return await this.get('/comments');\r\n    }\r\n\r\n    async getAlbums() {\r\n        return await this.get('/albums');\r\n    }\r\n\r\n    async getPhotos() {\r\n        return await this.get('/photos');\r\n    }\r\n\r\n    async getTodos() {\r\n        return await this.get('/todos');\r\n    }\r\n\r\n    async getUsers() {\r\n        return await this.get('/users');\r\n    }\r\n\r\n    // This example is just for demonstration on how to send multiple requests.\r\n    // If you have access to the API-backend you should make a route that returns this behaviour in a single request.\r\n    // But if you don't have backend access to the API, this is a good option.\r\n    async getPostsWithUsers() {\r\n        const [allPosts, allUsers] = await Promise.all([\r\n            this.getPosts(),\r\n            this.getUsers()\r\n        ]);\r\n\r\n        // Add data from the users request to the posts request\r\n        allPosts.forEach(post => {\r\n            const user = allUsers.find(x => x.id === post.userId);\r\n            if(user) {\r\n                post.userObj = {\r\n                    name: user.name,\r\n                    username: user.username,\r\n                    email: user.email\r\n                }\r\n            }\r\n        });\r\n\r\n        return allPosts;\r\n    }\r\n}\r\n\r\nexport default JsonPlaceholderAPI;"],"names":["$add4700f7e155979$export$2e2bcd8739ae039","obj","key","value","Object","defineProperty","enumerable","configurable","writable","$19add2eff13eb4be$export$2e2bcd8739ae039","target","i","arguments","length","source","ownKeys","keys","getOwnPropertySymbols","concat","filter","sym","getOwnPropertyDescriptor","forEach","$f41f0b10460a2a58$export$2e2bcd8739ae039","getOwnPropertyDescriptors","defineProperties","object","enumerableOnly","symbols","push","apply","$f41f0b10460a2a58$var$ownKeys","$dcdae3713cf3978a$export$2e2bcd8739ae039","async","resource","options","timeout","constroller","AbortController","timeoutId","setTimeout","abort","response","fetch","this","baseUrl","signal","clearTimeout","endpoint","filterJsonKeys","doFetch","ok","Error","status","jsonResult","json","constructor","$7746bceec4935a23$var$jsonPlaceholderAPI","get","id","allPosts","allUsers","Promise","all","getPosts","getUsers","post","user","find","x","userId","userObj","name","username","email","super","method","bind","getPostById","getComments","getCommentsForPostWithId","getAlbums","getPhotos","getTodos","getPostsWithUsers","item","button","document","querySelector","output","addEventListener","event","innerText","then","result","jsonStr","JSON","stringify","innerHTML","catch","error","querySelectorAll","codeElement","nextElementSibling","firstElementChild","style","display"],"version":3,"file":"index.79147248.js.map"}